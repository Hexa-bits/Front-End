{
  "version": 3,
  "sources": ["../../../../node_modules/fetch-mock/src/lib/set-up-and-tear-down.js", "../../../../node_modules/fetch-mock/src/lib/response-builder.js", "../../../../node_modules/fetch-mock/src/lib/request-utils.js", "../../../../node_modules/fetch-mock/src/lib/fetch-handler.js", "../../../../node_modules/glob-to-regexp/index.js", "../../../../node_modules/regexparam/dist/index.mjs", "../../../../node_modules/is-subset/index.js", "../../../../node_modules/dequal/dist/index.mjs", "../../../../node_modules/fetch-mock/src/Route/matchers.js", "../../../../node_modules/fetch-mock/src/Route/index.js", "../../../../node_modules/fetch-mock/src/lib/inspecting.js", "../../../../node_modules/fetch-mock/src/lib/index.js", "../../../../node_modules/fetch-mock/src/lib/status-text.js", "../../../../node_modules/fetch-mock/src/index.js"],
  "sourcesContent": ["const FetchMock = {};\n\nFetchMock.mock = function (...args) {\n\tif (args.length) {\n\t\tthis.addRoute(args);\n\t}\n\n\treturn this._mock();\n};\n\nFetchMock.addRoute = function (uncompiledRoute) {\n\tconst route = this.compileRoute(uncompiledRoute);\n\tconst clashes = this.routes.filter(({ identifier, method }) => {\n\t\tconst isMatch =\n\t\t\ttypeof identifier === 'function'\n\t\t\t\t? identifier === route.identifier\n\t\t\t\t: String(identifier) === String(route.identifier);\n\t\treturn isMatch && (!method || !route.method || method === route.method);\n\t});\n\n\tif (this.getOption('overwriteRoutes', route) === false || !clashes.length) {\n\t\tthis._uncompiledRoutes.push(uncompiledRoute);\n\t\treturn this.routes.push(route);\n\t}\n\n\tif (this.getOption('overwriteRoutes', route) === true) {\n\t\tclashes.forEach((clash) => {\n\t\t\tconst index = this.routes.indexOf(clash);\n\t\t\tthis._uncompiledRoutes.splice(index, 1, uncompiledRoute);\n\t\t\tthis.routes.splice(index, 1, route);\n\t\t});\n\t\treturn this.routes;\n\t}\n\n\tif (clashes.length) {\n\t\tthrow new Error(\n\t\t\t'fetch-mock: Adding route with same name or matcher as existing route. See `overwriteRoutes` option.',\n\t\t);\n\t}\n\n\tthis._uncompiledRoutes.push(uncompiledRoute);\n\tthis.routes.push(route);\n};\n\nFetchMock._mock = function () {\n\tif (!this.isSandbox) {\n\t\t// Do this here rather than in the constructor to ensure it's scoped to the test\n\t\tthis.realFetch = this.realFetch || globalThis.fetch;\n\t\tglobalThis.fetch = this.fetchHandler;\n\t}\n\treturn this;\n};\n\nFetchMock.catch = function (response) {\n\tif (this.fallbackResponse) {\n\t\tconsole.warn(\n\t\t\t'calling fetchMock.catch() twice - are you sure you want to overwrite the previous fallback response',\n\t\t);\n\t}\n\tthis.fallbackResponse = response || 'ok';\n\treturn this._mock();\n};\n\nFetchMock.spy = function (route) {\n\t// even though ._mock() is called by .mock() and .catch() we still need to\n\t// call it here otherwise .getNativeFetch() won't be able to use the reference\n\t// to .realFetch that ._mock() sets up\n\tthis._mock();\n\treturn route\n\t\t? this.mock(route, this.getNativeFetch())\n\t\t: this.catch(this.getNativeFetch());\n};\n\nconst defineShorthand = (methodName, underlyingMethod, shorthandOptions) => {\n\tFetchMock[methodName] = function (matcher, response, options) {\n\t\treturn this[underlyingMethod](\n\t\t\tmatcher,\n\t\t\tresponse,\n\t\t\tObject.assign(options || {}, shorthandOptions),\n\t\t);\n\t};\n};\n\nconst defineGreedyShorthand = (methodName, underlyingMethod) => {\n\tFetchMock[methodName] = function (response, options) {\n\t\treturn this[underlyingMethod]({}, response, options);\n\t};\n};\n\ndefineShorthand('sticky', 'mock', { sticky: true });\ndefineShorthand('once', 'mock', { repeat: 1 });\ndefineGreedyShorthand('any', 'mock');\ndefineGreedyShorthand('anyOnce', 'once');\n\n['get', 'post', 'put', 'delete', 'head', 'patch'].forEach((method) => {\n\tdefineShorthand(method, 'mock', { method });\n\tdefineShorthand(`${method}Once`, 'once', { method });\n\tdefineGreedyShorthand(`${method}Any`, method);\n\tdefineGreedyShorthand(`${method}AnyOnce`, `${method}Once`);\n});\n\nconst getRouteRemover =\n\t({ sticky: removeStickyRoutes }) =>\n\t(routes) =>\n\t\tremoveStickyRoutes ? [] : routes.filter(({ sticky }) => sticky);\n\nFetchMock.resetBehavior = function (options = {}) {\n\tconst removeRoutes = getRouteRemover(options);\n\n\tthis.routes = removeRoutes(this.routes);\n\tthis._uncompiledRoutes = removeRoutes(this._uncompiledRoutes);\n\n\tif (this.realFetch && !this.routes.length) {\n\t\tglobalThis.fetch = this.realFetch;\n\t\tthis.realFetch = undefined;\n\t}\n\n\tthis.fallbackResponse = undefined;\n\treturn this;\n};\n\nFetchMock.resetHistory = function () {\n\tthis._calls = [];\n\tthis._holdingPromises = [];\n\tthis.routes.forEach((route) => route.reset && route.reset());\n\treturn this;\n};\n\nFetchMock.restore = FetchMock.reset = function (options) {\n\tthis.resetBehavior(options);\n\tthis.resetHistory();\n\treturn this;\n};\n\nexport default FetchMock;\n", "const responseConfigProps = [\n\t'body',\n\t'headers',\n\t'throws',\n\t'status',\n\t'redirectUrl',\n];\n\nclass ResponseBuilder {\n\tconstructor(options) {\n\t\tObject.assign(this, options);\n\t}\n\n\texec() {\n\t\tthis.normalizeResponseConfig();\n\t\tthis.constructFetchOpts();\n\t\tthis.constructResponseBody();\n\n\t\tconst realResponse = new this.fetchMock.config.Response(\n\t\t\tthis.body,\n\t\t\tthis.options,\n\t\t);\n\n\t\tconst proxyResponse = this.buildObservableResponse(realResponse);\n\t\treturn [realResponse, proxyResponse];\n\t}\n\n\tsendAsObject() {\n\t\tif (responseConfigProps.some((prop) => this.responseConfig[prop])) {\n\t\t\tif (\n\t\t\t\tObject.keys(this.responseConfig).every((key) =>\n\t\t\t\t\tresponseConfigProps.includes(key),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn true;\n\t}\n\n\tnormalizeResponseConfig() {\n\t\t// If the response config looks like a status, start to generate a simple response\n\t\tif (typeof this.responseConfig === 'number') {\n\t\t\tthis.responseConfig = {\n\t\t\t\tstatus: this.responseConfig,\n\t\t\t};\n\t\t\t// If the response config is not an object, or is an object that doesn't use\n\t\t\t// any reserved properties, assume it is meant to be the body of the response\n\t\t} else if (typeof this.responseConfig === 'string' || this.sendAsObject()) {\n\t\t\tthis.responseConfig = {\n\t\t\t\tbody: this.responseConfig,\n\t\t\t};\n\t\t}\n\t}\n\n\tvalidateStatus(status) {\n\t\tif (!status) {\n\t\t\treturn 200;\n\t\t}\n\n\t\tif (\n\t\t\t(typeof status === 'number' &&\n\t\t\t\tparseInt(status, 10) !== status &&\n\t\t\t\tstatus >= 200) ||\n\t\t\tstatus < 600\n\t\t) {\n\t\t\treturn status;\n\t\t}\n\n\t\tthrow new TypeError(`fetch-mock: Invalid status ${status} passed on response object.\nTo respond with a JSON object that has status as a property assign the object to body\ne.g. {\"body\": {\"status: \"registered\"}}`);\n\t}\n\n\tconstructFetchOpts() {\n\t\tthis.options = this.responseConfig.options || {};\n\t\tthis.options.url = this.responseConfig.redirectUrl || this.url;\n\t\tthis.options.status = this.validateStatus(this.responseConfig.status);\n\t\tthis.options.statusText =\n\t\t\tthis.fetchMock.statusTextMap[String(this.options.status)];\n\n\t\t// Set up response headers. The empty object is to cope with\n\t\t// new Headers(undefined) throwing in Chrome\n\t\t// https://code.google.com/p/chromium/issues/detail?id=335871\n\t\tthis.options.headers = new this.fetchMock.config.Headers(\n\t\t\tthis.responseConfig.headers || {},\n\t\t);\n\t}\n\n\tgetOption(name) {\n\t\treturn this.fetchMock.getOption(name, this.route);\n\t}\n\n\tconvertToJson() {\n\t\t// convert to json if we need to\n\t\tif (\n\t\t\tthis.getOption('sendAsJson') &&\n\t\t\tthis.responseConfig.body != null &&\n\t\t\ttypeof this.body === 'object'\n\t\t) {\n\t\t\tthis.body = JSON.stringify(this.body);\n\t\t\tif (!this.options.headers.has('Content-Type')) {\n\t\t\t\tthis.options.headers.set('Content-Type', 'application/json');\n\t\t\t}\n\t\t}\n\t}\n\n\tsetContentLength() {\n\t\t// add a Content-Length header if we need to\n\t\tif (\n\t\t\tthis.getOption('includeContentLength') &&\n\t\t\ttypeof this.body === 'string' &&\n\t\t\t!this.options.headers.has('Content-Length')\n\t\t) {\n\t\t\tthis.options.headers.set('Content-Length', this.body.length.toString());\n\t\t}\n\t}\n\n\tconstructResponseBody() {\n\t\t// start to construct the body\n\t\tthis.body = this.responseConfig.body;\n\t\tthis.convertToJson();\n\t\tthis.setContentLength();\n\t}\n\n\tbuildObservableResponse(response) {\n\t\tconst { fetchMock } = this;\n\t\tresponse._fmResults = {};\n\t\t// Using a proxy means we can set properties that may not be writable on\n\t\t// the original Response. It also means we can track the resolution of\n\t\t// promises returned by res.json(), res.text() etc\n\t\treturn new Proxy(response, {\n\t\t\tget: (originalResponse, name) => {\n\t\t\t\tif (this.responseConfig.redirectUrl) {\n\t\t\t\t\tif (name === 'url') {\n\t\t\t\t\t\treturn this.responseConfig.redirectUrl;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (name === 'redirected') {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (typeof originalResponse[name] === 'function') {\n\t\t\t\t\treturn new Proxy(originalResponse[name], {\n\t\t\t\t\t\tapply: (func, thisArg, args) => {\n\t\t\t\t\t\t\tconst result = func.apply(response, args);\n\t\t\t\t\t\t\tif (result.then) {\n\t\t\t\t\t\t\t\tfetchMock._holdingPromises.push(result.catch(() => null));\n\t\t\t\t\t\t\t\toriginalResponse._fmResults[name] = result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn originalResponse[name];\n\t\t\t},\n\t\t});\n\t}\n}\n\nexport default (options) => new ResponseBuilder(options).exec();\n", "// https://stackoverflow.com/a/19709846/308237 plus data: scheme\n// split into 2 code paths as URL constructor does not support protocol-relative urls\nconst absoluteUrlRX = new RegExp('^[a-z]+://|^data:', 'i');\nconst protocolRelativeUrlRX = new RegExp('^//', 'i');\n\nconst headersToArray = (headers) => {\n\t// node-fetch 1 Headers\n\tif (typeof headers.raw === 'function') {\n\t\treturn Object.entries(headers.raw());\n\t}\n\tif (headers[Symbol.iterator]) {\n\t\treturn [...headers];\n\t}\n\treturn Object.entries(headers);\n};\n\nconst zipObject = (entries) =>\n\tentries.reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {});\n\nexport function normalizeUrl(url) {\n\tif (\n\t\ttypeof url === 'function' ||\n\t\turl instanceof RegExp ||\n\t\t/^(begin|end|glob|express|path):/.test(url)\n\t) {\n\t\treturn url;\n\t}\n\tif (absoluteUrlRX.test(url)) {\n\t\tconst u = new URL(url);\n\t\treturn u.href;\n\t}\n\tif (protocolRelativeUrlRX.test(url)) {\n\t\tconst u = new URL(url, 'http://dummy');\n\t\treturn u.href;\n\t}\n\tconst u = new URL(url, 'http://dummy');\n\treturn u.pathname + u.search;\n}\n\nexport function normalizeRequest(url, options, Request) {\n\tif (Request.prototype.isPrototypeOf(url)) {\n\t\tconst derivedOptions = {\n\t\t\tmethod: url.method,\n\t\t};\n\n\t\ttry {\n\t\t\tderivedOptions.body = url.clone().text();\n\t\t} catch {} // eslint-disable-line no-empty\n\n\t\tconst normalizedRequestObject = {\n\t\t\turl: normalizeUrl(url.url),\n\t\t\toptions: Object.assign(derivedOptions, options),\n\t\t\trequest: url,\n\t\t\tsignal: (options && options.signal) || url.signal,\n\t\t};\n\n\t\tconst headers = headersToArray(url.headers);\n\n\t\tif (headers.length) {\n\t\t\tnormalizedRequestObject.options.headers = zipObject(headers);\n\t\t}\n\t\treturn normalizedRequestObject;\n\t}\n\tif (\n\t\ttypeof url === 'string' ||\n\t\turl instanceof String ||\n\t\t// horrible URL object duck-typing\n\t\t(typeof url === 'object' && 'href' in url)\n\t) {\n\t\treturn {\n\t\t\turl: normalizeUrl(url),\n\t\t\toptions,\n\t\t\tsignal: options && options.signal,\n\t\t};\n\t}\n\tif (typeof url === 'object') {\n\t\tthrow new TypeError(\n\t\t\t'fetch-mock: Unrecognised Request object. Read the Config and Installation sections of the docs',\n\t\t);\n\t} else {\n\t\tthrow new TypeError('fetch-mock: Invalid arguments passed to fetch');\n\t}\n}\n\nexport function getPath(url) {\n\tconst u = absoluteUrlRX.test(url)\n\t\t? new URL(url)\n\t\t: new URL(url, 'http://dummy');\n\treturn u.pathname;\n}\n\nexport function getQuery(url) {\n\tconst u = absoluteUrlRX.test(url)\n\t\t? new URL(url)\n\t\t: new URL(url, 'http://dummy');\n\treturn u.search ? u.search.substr(1) : '';\n}\n\nexport const headers = {\n\tnormalize: (headers) => zipObject(headersToArray(headers)),\n\ttoLowerCase: (headers) =>\n\t\tObject.keys(headers).reduce((obj, k) => {\n\t\t\tobj[k.toLowerCase()] = headers[k];\n\t\t\treturn obj;\n\t\t}, {}),\n\tequal: (actualHeader, expectedHeader) => {\n\t\tactualHeader = Array.isArray(actualHeader) ? actualHeader : [actualHeader];\n\t\texpectedHeader = Array.isArray(expectedHeader)\n\t\t\t? expectedHeader\n\t\t\t: [expectedHeader];\n\n\t\tif (actualHeader.length !== expectedHeader.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn actualHeader.every((val, i) => val === expectedHeader[i]);\n\t},\n};\n", "import responseBuilder from './response-builder.js';\nimport * as requestUtils from './request-utils.js';\n\nconst FetchMock = {};\n\nconst resolve = async (\n\t{ response, responseIsFetch = false },\n\turl,\n\toptions,\n\trequest,\n) => {\n\t// We want to allow things like\n\t// - function returning a Promise for a response\n\t// - delaying (using a timeout Promise) a function's execution to generate\n\t//   a response\n\t// Because of this we can't safely check for function before Promisey-ness,\n\t// or vice versa. So to keep it DRY, and flexible, we keep trying until we\n\t// have something that looks like neither Promise nor function\n\n\twhile (true) {\n\t\tif (typeof response === 'function') {\n\t\t\t// in the case of falling back to the network we need to make sure we're using\n\t\t\t// the original Request instance, not our normalised url + options\n\t\t\tif (responseIsFetch) {\n\t\t\t\tif (request) {\n\t\t\t\t\treturn response(request);\n\t\t\t\t}\n\t\t\t\treturn response(url, options);\n\t\t\t}\n\t\t\tresponse = response(url, options, request);\n\t\t} else if (typeof response.then === 'function') {\n\t\t\tresponse = await response;\n\t\t} else {\n\t\t\treturn response;\n\t\t}\n\t}\n};\n\nFetchMock.needsAsyncBodyExtraction = function ({ request }) {\n\treturn request && this.routes.some(({ usesBody }) => usesBody);\n};\n\nFetchMock.fetchHandler = function (url, options) {\n\tconst normalizedRequest = requestUtils.normalizeRequest(\n\t\turl,\n\t\toptions,\n\t\tthis.config.Request,\n\t);\n\n\tif (this.needsAsyncBodyExtraction(normalizedRequest)) {\n\t\treturn this._extractBodyThenHandle(normalizedRequest);\n\t}\n\treturn this._fetchHandler(normalizedRequest);\n};\n\nFetchMock._extractBodyThenHandle = async function (normalizedRequest) {\n\tnormalizedRequest.options.body = await normalizedRequest.options.body;\n\treturn this._fetchHandler(normalizedRequest);\n};\n\nFetchMock._fetchHandler = function ({ url, options, request, signal }) {\n\tconst { route, callLog } = this.executeRouter(url, options, request);\n\n\tthis.recordCall(callLog);\n\n\t// this is used to power the .flush() method\n\tlet done;\n\tthis._holdingPromises.push(\n\t\tnew Promise((res) => {\n\t\t\tdone = res;\n\t\t}),\n\t);\n\n\t// wrapped in this promise to make sure we respect custom Promise\n\t// constructors defined by the user\n\treturn new Promise((res, rej) => {\n\t\tif (signal) {\n\t\t\tconst abort = () => {\n\t\t\t\trej(new DOMException('The operation was aborted.', 'AbortError'));\n\t\t\t\tdone();\n\t\t\t};\n\t\t\tif (signal.aborted) {\n\t\t\t\tabort();\n\t\t\t}\n\t\t\tsignal.addEventListener('abort', abort);\n\t\t}\n\n\t\tthis.generateResponse({\n\t\t\troute,\n\t\t\turl,\n\t\t\toptions,\n\t\t\trequest,\n\t\t\tcallLog,\n\t\t})\n\t\t\t.then(res, rej)\n\t\t\t.then(done, done);\n\t});\n};\n\nFetchMock.fetchHandler.isMock = true;\n\nFetchMock.executeRouter = function (url, options, request) {\n\tconst callLog = {\n\t\turl,\n\t\toptions,\n\t\trequest,\n\t\tisUnmatched: true,\n\t};\n\tif (this.getOption('fallbackToNetwork') === 'always') {\n\t\treturn {\n\t\t\troute: { response: this.getNativeFetch(), responseIsFetch: true },\n\t\t\t// BUG - this callLog never used to get sent. Discovered the bug\n\t\t\t// but can't fix outside a major release as it will potentially\n\t\t\t// cause too much disruption\n\t\t\t//\n\t\t\t// callLog,\n\t\t};\n\t}\n\n\tconst route = this.router(url, options, request);\n\n\tif (route) {\n\t\treturn {\n\t\t\troute,\n\t\t\tcallLog: {\n\t\t\t\turl,\n\t\t\t\toptions,\n\t\t\t\trequest,\n\t\t\t\tidentifier: route.identifier,\n\t\t\t},\n\t\t};\n\t}\n\n\tif (this.getOption('warnOnFallback')) {\n\t\tconsole.warn(`Unmatched ${(options && options.method) || 'GET'} to ${url}`);\n\t}\n\n\tif (this.fallbackResponse) {\n\t\treturn { route: { response: this.fallbackResponse }, callLog };\n\t}\n\n\tif (!this.getOption('fallbackToNetwork')) {\n\t\tthrow new Error(\n\t\t\t`fetch-mock: No fallback response defined for ${\n\t\t\t\t(options && options.method) || 'GET'\n\t\t\t} to ${url}`,\n\t\t);\n\t}\n\n\treturn {\n\t\troute: { response: this.getNativeFetch(), responseIsFetch: true },\n\t\tcallLog,\n\t};\n};\n\nFetchMock.generateResponse = async function ({\n\troute,\n\turl,\n\toptions,\n\trequest,\n\tcallLog = {},\n}) {\n\tconst response = await resolve(route, url, options, request);\n\n\t// If the response says to throw an error, throw it\n\t// Type checking is to deal with sinon spies having a throws property :-0\n\tif (response.throws && typeof response !== 'function') {\n\t\tthrow response.throws;\n\t}\n\n\t// If the response is a pre-made Response, respond with it\n\tif (this.config.Response.prototype.isPrototypeOf(response)) {\n\t\tcallLog.response = response;\n\t\treturn response;\n\t}\n\n\t// finally, if we need to convert config into a response, we do it\n\tconst [realResponse, finalResponse] = responseBuilder({\n\t\turl,\n\t\tresponseConfig: response,\n\t\tfetchMock: this,\n\t\troute,\n\t});\n\n\tcallLog.response = realResponse;\n\n\treturn finalResponse;\n};\n\nFetchMock.router = function (url, options, request) {\n\tconst route = this.routes.find((route) => {\n\t\treturn route.matcher(url, options, request);\n\t});\n\n\tif (route) {\n\t\treturn route;\n\t}\n};\n\nFetchMock.getNativeFetch = function () {\n\tconst func = this.realFetch || (this.isSandbox && this.config.fetch);\n\tif (!func) {\n\t\tthrow new Error(\n\t\t\t'fetch-mock: Falling back to network only available on global fetch-mock, or by setting config.fetch on sandboxed fetch-mock',\n\t\t);\n\t}\n\treturn func;\n};\n\nFetchMock.recordCall = function (obj) {\n\tif (obj) {\n\t\tthis._calls.push(obj);\n\t}\n};\n\nexport default FetchMock;\n", "module.exports = function (glob, opts) {\n  if (typeof glob !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  var str = String(glob);\n\n  // The regexp we are building, as a string.\n  var reStr = \"\";\n\n  // Whether we are matching so called \"extended\" globs (like bash) and should\n  // support single character matching, matching ranges of characters, group\n  // matching, etc.\n  var extended = opts ? !!opts.extended : false;\n\n  // When globstar is _false_ (default), '/foo/*' is translated a regexp like\n  // '^\\/foo\\/.*$' which will match any string beginning with '/foo/'\n  // When globstar is _true_, '/foo/*' is translated to regexp like\n  // '^\\/foo\\/[^/]*$' which will match any string beginning with '/foo/' BUT\n  // which does not have a '/' to the right of it.\n  // E.g. with '/foo/*' these will match: '/foo/bar', '/foo/bar.txt' but\n  // these will not '/foo/bar/baz', '/foo/bar/baz.txt'\n  // Lastely, when globstar is _true_, '/foo/**' is equivelant to '/foo/*' when\n  // globstar is _false_\n  var globstar = opts ? !!opts.globstar : false;\n\n  // If we are doing extended matching, this boolean is true when we are inside\n  // a group (eg {*.html,*.js}), and false otherwise.\n  var inGroup = false;\n\n  // RegExp flags (eg \"i\" ) to pass in to RegExp constructor.\n  var flags = opts && typeof( opts.flags ) === \"string\" ? opts.flags : \"\";\n\n  var c;\n  for (var i = 0, len = str.length; i < len; i++) {\n    c = str[i];\n\n    switch (c) {\n    case \"/\":\n    case \"$\":\n    case \"^\":\n    case \"+\":\n    case \".\":\n    case \"(\":\n    case \")\":\n    case \"=\":\n    case \"!\":\n    case \"|\":\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"?\":\n      if (extended) {\n        reStr += \".\";\n\t    break;\n      }\n\n    case \"[\":\n    case \"]\":\n      if (extended) {\n        reStr += c;\n\t    break;\n      }\n\n    case \"{\":\n      if (extended) {\n        inGroup = true;\n\t    reStr += \"(\";\n\t    break;\n      }\n\n    case \"}\":\n      if (extended) {\n        inGroup = false;\n\t    reStr += \")\";\n\t    break;\n      }\n\n    case \",\":\n      if (inGroup) {\n        reStr += \"|\";\n\t    break;\n      }\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"*\":\n      // Move over all consecutive \"*\"'s.\n      // Also store the previous and next characters\n      var prevChar = str[i - 1];\n      var starCount = 1;\n      while(str[i + 1] === \"*\") {\n        starCount++;\n        i++;\n      }\n      var nextChar = str[i + 1];\n\n      if (!globstar) {\n        // globstar is disabled, so treat any number of \"*\" as one\n        reStr += \".*\";\n      } else {\n        // globstar is enabled, so determine if this is a globstar segment\n        var isGlobstar = starCount > 1                      // multiple \"*\"'s\n          && (prevChar === \"/\" || prevChar === undefined)   // from the start of the segment\n          && (nextChar === \"/\" || nextChar === undefined)   // to the end of the segment\n\n        if (isGlobstar) {\n          // it's a globstar, so match zero or more path segments\n          reStr += \"((?:[^/]*(?:\\/|$))*)\";\n          i++; // move over the \"/\"\n        } else {\n          // it's not a globstar, so only match one path segment\n          reStr += \"([^/]*)\";\n        }\n      }\n      break;\n\n    default:\n      reStr += c;\n    }\n  }\n\n  // When regexp 'g' flag is specified don't\n  // constrain the regular expression with ^ & $\n  if (!flags || !~flags.indexOf('g')) {\n    reStr = \"^\" + reStr + \"$\";\n  }\n\n  return new RegExp(reStr, flags);\n};\n", "/**\n * @param {string|RegExp} input The route pattern\n * @param {boolean} [loose] Allow open-ended matching. Ignored with `RegExp` input.\n */\nexport function parse(input, loose) {\n\tif (input instanceof RegExp) return { keys:false, pattern:input };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = input.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push(c);\n\t\t\tpattern += tmp[1] === '?' ? '(?:/(.*))?' : '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? key : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n/**\n * Check if an object is contained within another object.\n *\n * Returns `true` if:\n * - all enumerable keys of *subset* are also enumerable in *superset*, and\n * - every value assigned to an enumerable key of *subset* strictly equals\n *   the value assigned to the same key of *superset* – or is a subset of it.\n *\n * @param  {Object}  superset\n * @param  {Object}  subset\n *\n * @returns  {Boolean}\n *\n * @module    is-subset\n * @function  default\n * @alias     isSubset\n */\nvar isSubset = (function (_isSubset) {\n  function isSubset(_x, _x2) {\n    return _isSubset.apply(this, arguments);\n  }\n\n  isSubset.toString = function () {\n    return _isSubset.toString();\n  };\n\n  return isSubset;\n})(function (superset, subset) {\n  if (typeof superset !== 'object' || superset === null || (typeof subset !== 'object' || subset === null)) return false;\n\n  return Object.keys(subset).every(function (key) {\n    if (!superset.propertyIsEnumerable(key)) return false;\n\n    var subsetItem = subset[key];\n    var supersetItem = superset[key];\n    if (typeof subsetItem === 'object' && subsetItem !== null ? !isSubset(supersetItem, subsetItem) : supersetItem !== subsetItem) return false;\n\n    return true;\n  });\n});\n\nexports['default'] = isSubset;\nmodule.exports = exports['default'];", "var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n", "import glob from 'glob-to-regexp';\nimport * as regexparam from 'regexparam';\nimport isSubset from 'is-subset';\nimport { dequal as isEqual } from 'dequal';\nimport {\n\theaders as headerUtils,\n\tgetPath,\n\tgetQuery,\n\tnormalizeUrl,\n} from '../lib/request-utils.js';\n\nconst debuggableUrlFunc = (func) => (url) => {\n\treturn func(url);\n};\n\nconst stringMatchers = {\n\tbegin: (targetString) =>\n\t\tdebuggableUrlFunc((url) => url.indexOf(targetString) === 0),\n\tend: (targetString) =>\n\t\tdebuggableUrlFunc(\n\t\t\t(url) => url.substr(-targetString.length) === targetString,\n\t\t),\n\tglob: (targetString) => {\n\t\tconst urlRX = glob(targetString);\n\t\treturn debuggableUrlFunc((url) => urlRX.test(url));\n\t},\n\texpress: (targetString) => {\n\t\tconst urlRX = regexparam.parse(targetString);\n\t\treturn debuggableUrlFunc((url) => urlRX.pattern.test(getPath(url)));\n\t},\n\tpath: (targetString) =>\n\t\tdebuggableUrlFunc((url) => getPath(url) === targetString),\n};\n\nconst getHeaderMatcher = ({ headers: expectedHeaders }) => {\n\tif (!expectedHeaders) {\n\t\treturn;\n\t}\n\tconst expectation = headerUtils.toLowerCase(expectedHeaders);\n\treturn (url, { headers = {} }) => {\n\t\tconst lowerCaseHeaders = headerUtils.toLowerCase(\n\t\t\theaderUtils.normalize(headers),\n\t\t);\n\t\treturn Object.keys(expectation).every((headerName) =>\n\t\t\theaderUtils.equal(lowerCaseHeaders[headerName], expectation[headerName]),\n\t\t);\n\t};\n};\n\nconst getMethodMatcher = ({ method: expectedMethod }) => {\n\tif (!expectedMethod) {\n\t\treturn;\n\t}\n\treturn (url, { method }) => {\n\t\tconst actualMethod = method ? method.toLowerCase() : 'get';\n\t\treturn expectedMethod === actualMethod;\n\t};\n};\n\nconst getQueryStringMatcher = ({ query: passedQuery }) => {\n\tif (!passedQuery) {\n\t\treturn;\n\t}\n\n\tconst expectedQuery = new URLSearchParams();\n\tfor (const [key, value] of Object.entries(passedQuery)) {\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (const item of value) {\n\t\t\t\texpectedQuery.append(\n\t\t\t\t\tkey,\n\t\t\t\t\ttypeof item === 'object' || typeof item === 'undefined'\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: item.toString(),\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\texpectedQuery.append(\n\t\t\t\tkey,\n\t\t\t\ttypeof value === 'object' || typeof value === 'undefined'\n\t\t\t\t\t? ''\n\t\t\t\t\t: value.toString(),\n\t\t\t);\n\t\t}\n\t}\n\n\tconst keys = Array.from(expectedQuery.keys());\n\treturn (url) => {\n\t\tconst queryString = getQuery(url);\n\t\tconst query = new URLSearchParams(queryString);\n\n\t\treturn keys.every((key) => {\n\t\t\tconst expectedValues = expectedQuery.getAll(key).sort();\n\t\t\tconst actualValues = query.getAll(key).sort();\n\n\t\t\tif (expectedValues.length !== actualValues.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (Array.isArray(passedQuery[key])) {\n\t\t\t\treturn expectedValues.every(\n\t\t\t\t\t(expected, index) => expected === actualValues[index],\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn isEqual(actualValues, expectedValues);\n\t\t});\n\t};\n};\n\nconst getParamsMatcher = ({ params: expectedParams, url: matcherUrl }) => {\n\tif (!expectedParams) {\n\t\treturn;\n\t}\n\tif (!/express:/.test(matcherUrl)) {\n\t\tthrow new Error(\n\t\t\t'fetch-mock: matching on params is only possible when using an express: matcher',\n\t\t);\n\t}\n\tconst expectedKeys = Object.keys(expectedParams);\n\tconst re = regexparam.parse(matcherUrl.replace(/^express:/, ''));\n\treturn (url) => {\n\t\tconst vals = re.pattern.exec(getPath(url)) || [];\n\t\tvals.shift();\n\t\tconst params = re.keys.reduce(\n\t\t\t(map, paramName, i) =>\n\t\t\t\tvals[i] ? Object.assign(map, { [paramName]: vals[i] }) : map,\n\t\t\t{},\n\t\t);\n\t\treturn expectedKeys.every((key) => params[key] === expectedParams[key]);\n\t};\n};\n\nconst getBodyMatcher = (route, fetchMock) => {\n\tconst matchPartialBody = fetchMock.getOption('matchPartialBody', route);\n\tconst { body: expectedBody } = route;\n\n\treturn (url, { body, method = 'get' }) => {\n\t\tif (method.toLowerCase() === 'get') {\n\t\t\t// GET requests don’t send a body so the body matcher should be ignored for them\n\t\t\treturn true;\n\t\t}\n\n\t\tlet sentBody;\n\n\t\ttry {\n\t\t\tsentBody = JSON.parse(body);\n\t\t} catch {} // eslint-disable-line no-empty\n\n\t\treturn (\n\t\t\tsentBody &&\n\t\t\t(matchPartialBody\n\t\t\t\t? isSubset(sentBody, expectedBody)\n\t\t\t\t: isEqual(sentBody, expectedBody))\n\t\t);\n\t};\n};\n\nconst getFullUrlMatcher = (route, matcherUrl, query) => {\n\t// if none of the special syntaxes apply, it's just a simple string match\n\t// but we have to be careful to normalize the url we check and the name\n\t// of the route to allow for e.g. http://it.at.there being indistinguishable\n\t// from http://it.at.there/ once we start generating Request/Url objects\n\tconst expectedUrl = normalizeUrl(matcherUrl);\n\tif (route.identifier === matcherUrl) {\n\t\troute.identifier = expectedUrl;\n\t}\n\n\treturn (matcherUrl) => {\n\t\tif (query && expectedUrl.indexOf('?')) {\n\t\t\treturn matcherUrl.indexOf(expectedUrl) === 0;\n\t\t}\n\t\treturn normalizeUrl(matcherUrl) === expectedUrl;\n\t};\n};\n\nconst getFunctionMatcher = ({ functionMatcher }) => {\n\treturn (...args) => {\n\t\treturn functionMatcher(...args);\n\t};\n};\n\nconst getUrlMatcher = (route) => {\n\tconst { url: matcherUrl, query } = route;\n\n\tif (matcherUrl === '*') {\n\t\treturn () => true;\n\t}\n\n\tif (matcherUrl instanceof RegExp) {\n\t\treturn (url) => matcherUrl.test(url);\n\t}\n\n\tif (matcherUrl.href) {\n\t\treturn getFullUrlMatcher(route, matcherUrl.href, query);\n\t}\n\n\tfor (const shorthand in stringMatchers) {\n\t\tif (matcherUrl.indexOf(`${shorthand}:`) === 0) {\n\t\t\tconst urlFragment = matcherUrl.replace(new RegExp(`^${shorthand}:`), '');\n\t\t\treturn stringMatchers[shorthand](urlFragment);\n\t\t}\n\t}\n\n\treturn getFullUrlMatcher(route, matcherUrl, query);\n};\n\nexport default [\n\t{ name: 'query', matcher: getQueryStringMatcher },\n\t{ name: 'method', matcher: getMethodMatcher },\n\t{ name: 'headers', matcher: getHeaderMatcher },\n\t{ name: 'params', matcher: getParamsMatcher },\n\t{ name: 'body', matcher: getBodyMatcher, usesBody: true },\n\t{ name: 'functionMatcher', matcher: getFunctionMatcher },\n\t{ name: 'url', matcher: getUrlMatcher },\n];\n", "import builtInMatchers from './matchers.js';\n\nconst isUrlMatcher = (matcher) =>\n\tmatcher instanceof RegExp ||\n\ttypeof matcher === 'string' ||\n\t(typeof matcher === 'object' && 'href' in matcher);\n\nconst isFunctionMatcher = (matcher) => typeof matcher === 'function';\n\nconst nameToOptions = (options) =>\n\ttypeof options === 'string' ? { name: options } : options;\n\nclass Route {\n\tconstructor(args, fetchMock) {\n\t\tthis.fetchMock = fetchMock;\n\t\tthis.init(args);\n\t\tthis.sanitize();\n\t\tthis.validate();\n\t\tthis.generateMatcher();\n\t\tthis.limit();\n\t\tthis.delayResponse();\n\t}\n\n\tvalidate() {\n\t\tif (!('response' in this)) {\n\t\t\tthrow new Error('fetch-mock: Each route must define a response');\n\t\t}\n\n\t\tif (!Route.registeredMatchers.some(({ name }) => name in this)) {\n\t\t\tthrow new Error(\n\t\t\t\t\"fetch-mock: Each route must specify some criteria for matching calls to fetch. To match all calls use '*'\",\n\t\t\t);\n\t\t}\n\t}\n\n\tinit(args) {\n\t\tconst [matcher, response, nameOrOptions = {}] = args;\n\t\tconst routeConfig = {};\n\n\t\tif (isUrlMatcher(matcher) || isFunctionMatcher(matcher)) {\n\t\t\trouteConfig.matcher = matcher;\n\t\t} else {\n\t\t\tObject.assign(routeConfig, matcher);\n\t\t}\n\n\t\tif (typeof response !== 'undefined') {\n\t\t\trouteConfig.response = response;\n\t\t}\n\n\t\tif (nameOrOptions) {\n\t\t\tObject.assign(\n\t\t\t\trouteConfig,\n\t\t\t\ttypeof nameOrOptions === 'string'\n\t\t\t\t\t? nameToOptions(nameOrOptions)\n\t\t\t\t\t: nameOrOptions,\n\t\t\t);\n\t\t}\n\n\t\tObject.assign(this, routeConfig);\n\t}\n\n\tsanitize() {\n\t\tif (this.method) {\n\t\t\tthis.method = this.method.toLowerCase();\n\t\t}\n\t\tif (isUrlMatcher(this.matcher)) {\n\t\t\tthis.url = this.matcher;\n\t\t\tdelete this.matcher;\n\t\t}\n\n\t\tthis.functionMatcher = this.matcher || this.functionMatcher;\n\n\t\tthis.identifier = this.name || this.url || this.functionMatcher;\n\t}\n\n\tgenerateMatcher() {\n\t\tconst activeMatchers = Route.registeredMatchers\n\t\t\t.map(\n\t\t\t\t({ name, matcher, usesBody }) =>\n\t\t\t\t\tthis[name] && { matcher: matcher(this, this.fetchMock), usesBody },\n\t\t\t)\n\t\t\t.filter((matcher) => Boolean(matcher));\n\n\t\tthis.usesBody = activeMatchers.some(({ usesBody }) => usesBody);\n\n\t\tthis.matcher = (url, options = {}, request) =>\n\t\t\tactiveMatchers.every(({ matcher }) => matcher(url, options, request));\n\t}\n\n\tlimit() {\n\t\tif (!this.repeat) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { matcher } = this;\n\t\tlet timesLeft = this.repeat;\n\t\tthis.matcher = (url, options) => {\n\t\t\tconst match = timesLeft && matcher(url, options);\n\t\t\tif (match) {\n\t\t\t\ttimesLeft--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tthis.reset = () => {\n\t\t\ttimesLeft = this.repeat;\n\t\t};\n\t}\n\n\tdelayResponse() {\n\t\tif (this.delay) {\n\t\t\tconst { response } = this;\n\t\t\tthis.response = () => {\n\t\t\t\treturn new Promise((res) =>\n\t\t\t\t\tsetTimeout(() => res(response), this.delay),\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t}\n\n\tstatic addMatcher(matcher) {\n\t\tRoute.registeredMatchers.push(matcher);\n\t}\n}\n\nRoute.registeredMatchers = [];\n\nbuiltInMatchers.forEach(Route.addMatcher);\n\nexport default Route;\n", "import { normalizeUrl } from './request-utils.js';\nimport Route from '../Route/index.js';\n\nconst FetchMock = {};\nconst isName = (nameOrMatcher) =>\n\ttypeof nameOrMatcher === 'string' && /^[\\da-zA-Z-]+$/.test(nameOrMatcher);\n\nconst filterCallsWithMatcher = function (matcher, options = {}, calls) {\n\t({ matcher } = new Route([{ matcher, response: 'ok', ...options }], this));\n\treturn calls.filter(({ url, options }) =>\n\t\tmatcher(normalizeUrl(url), options),\n\t);\n};\n\nconst formatDebug = (func) =>\n\tfunction (...args) {\n\t\tconst result = func.call(this, ...args);\n\t\treturn result;\n\t};\n\nconst callObjToArray = (obj) => {\n\tif (!obj) {\n\t\treturn undefined;\n\t}\n\tconst { url, options, request, identifier, isUnmatched, response } = obj;\n\tconst arr = [url, options];\n\tarr.request = request;\n\tarr.identifier = identifier;\n\tarr.isUnmatched = isUnmatched;\n\tarr.response = response;\n\treturn arr;\n};\n\nFetchMock.filterCalls = function (nameOrMatcher, options) {\n\tlet calls = this._calls;\n\tlet matcher = '*';\n\n\tif ([true, 'matched'].includes(nameOrMatcher)) {\n\t\tcalls = calls.filter(({ isUnmatched }) => !isUnmatched);\n\t} else if ([false, 'unmatched'].includes(nameOrMatcher)) {\n\t\tcalls = calls.filter(({ isUnmatched }) => isUnmatched);\n\t} else if (isName(nameOrMatcher)) {\n\t\tcalls = calls.filter(({ identifier }) => identifier === nameOrMatcher);\n\t} else if (typeof nameOrMatcher !== 'undefined') {\n\t\tmatcher = nameOrMatcher === '*' ? '*' : normalizeUrl(nameOrMatcher);\n\t\tif (this.routes.some(({ identifier }) => identifier === matcher)) {\n\t\t\tcalls = calls.filter((call) => call.identifier === matcher);\n\t\t}\n\t}\n\n\tif ((options || matcher !== '*') && calls.length) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = { method: options };\n\t\t}\n\t\tcalls = filterCallsWithMatcher.call(this, matcher, options, calls);\n\t}\n\treturn calls.map(callObjToArray);\n};\n\nFetchMock.calls = formatDebug(function (nameOrMatcher, options) {\n\treturn this.filterCalls(nameOrMatcher, options);\n});\n\nFetchMock.lastCall = formatDebug(function (nameOrMatcher, options) {\n\treturn [...this.filterCalls(nameOrMatcher, options)].pop();\n});\n\nFetchMock.lastUrl = formatDebug(function (nameOrMatcher, options) {\n\treturn (this.lastCall(nameOrMatcher, options) || [])[0];\n});\n\nFetchMock.lastOptions = formatDebug(function (nameOrMatcher, options) {\n\treturn (this.lastCall(nameOrMatcher, options) || [])[1];\n});\n\nFetchMock.lastResponse = formatDebug(function (nameOrMatcher, options) {\n\tconst { response } = this.lastCall(nameOrMatcher, options) || [];\n\ttry {\n\t\tconst clonedResponse = response.clone();\n\t\treturn clonedResponse;\n\t} catch {\n\t\tObject.entries(response._fmResults).forEach(([name, result]) => {\n\t\t\tresponse[name] = () => result;\n\t\t});\n\t\treturn response;\n\t}\n});\n\nFetchMock.called = formatDebug(function (nameOrMatcher, options) {\n\treturn Boolean(this.filterCalls(nameOrMatcher, options).length);\n});\n\nFetchMock.flush = formatDebug(async function (waitForResponseMethods) {\n\tconst queuedPromises = this._holdingPromises;\n\tthis._holdingPromises = [];\n\n\tawait Promise.all(queuedPromises);\n\tif (waitForResponseMethods && this._holdingPromises.length) {\n\t\tawait this.flush(waitForResponseMethods);\n\t}\n});\n\nFetchMock.done = formatDebug(function (nameOrMatcher) {\n\tlet routesToCheck;\n\n\tif (nameOrMatcher && typeof nameOrMatcher !== 'boolean') {\n\t\troutesToCheck = [{ identifier: nameOrMatcher }];\n\t} else {\n\t\troutesToCheck = this.routes;\n\t}\n\n\t// Can't use array.every because would exit after first failure, which would\n\t// break the logging\n\tconst result = routesToCheck\n\t\t.map(({ identifier }) => {\n\t\t\tif (!this.called(identifier)) {\n\t\t\t\tconsole.warn(`Warning: ${identifier} not called`);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst expectedTimes = (\n\t\t\t\tthis.routes.find((r) => r.identifier === identifier) || {}\n\t\t\t).repeat;\n\n\t\t\tif (!expectedTimes) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst actualTimes = this.filterCalls(identifier).length;\n\n\t\t\tif (expectedTimes > actualTimes) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Warning: ${identifier} only called ${actualTimes} times, but ${expectedTimes} expected`,\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t})\n\t\t.every((isDone) => isDone);\n\n\treturn result;\n});\n\nexport default FetchMock;\n", "import setUpAndTearDown from './set-up-and-tear-down.js';\nimport fetchHandler from './fetch-handler.js';\nimport inspecting from './inspecting.js';\nimport Route from '../Route/index.js';\n\nconst FetchMock = { ...fetchHandler, ...setUpAndTearDown, ...inspecting };\n\nFetchMock.addMatcher = function (matcher) {\n\tRoute.addMatcher(matcher);\n};\n\nFetchMock.config = {\n\tfallbackToNetwork: false,\n\tincludeContentLength: true,\n\tsendAsJson: true,\n\twarnOnFallback: true,\n\toverwriteRoutes: undefined,\n};\n\nFetchMock.createInstance = function () {\n\tconst instance = Object.create(FetchMock);\n\tinstance._uncompiledRoutes = (this._uncompiledRoutes || []).slice();\n\tinstance.routes = instance._uncompiledRoutes.map((config) =>\n\t\tthis.compileRoute(config),\n\t);\n\tinstance.fallbackResponse = this.fallbackResponse || undefined;\n\tinstance.config = { ...(this.config || FetchMock.config) };\n\tinstance._calls = [];\n\tinstance._holdingPromises = [];\n\tinstance.bindMethods();\n\treturn instance;\n};\n\nFetchMock.compileRoute = function (config) {\n\treturn new Route(config, this);\n};\n\nFetchMock.bindMethods = function () {\n\tthis.fetchHandler = FetchMock.fetchHandler.bind(this);\n\tthis.reset = this.restore = FetchMock.reset.bind(this);\n\tthis.resetHistory = FetchMock.resetHistory.bind(this);\n\tthis.resetBehavior = FetchMock.resetBehavior.bind(this);\n};\n\nFetchMock.sandbox = function () {\n\t// this construct allows us to create a fetch-mock instance which is also\n\t// a callable function, while circumventing circularity when defining the\n\t// object that this function should be bound to\n\tconst fetchMockProxy = (url, options) => sandbox.fetchHandler(url, options);\n\n\tconst sandbox = Object.assign(\n\t\tfetchMockProxy, // Ensures that the entire returned object is a callable function\n\t\tFetchMock, // prototype methods\n\t\tthis.createInstance(), // instance data\n\t\t{\n\t\t\tHeaders: this.config.Headers,\n\t\t\tRequest: this.config.Request,\n\t\t\tResponse: this.config.Response,\n\t\t},\n\t);\n\n\tsandbox.bindMethods();\n\tsandbox.isSandbox = true;\n\tsandbox.default = sandbox;\n\treturn sandbox;\n};\n\nFetchMock.getOption = function (name, route = {}) {\n\treturn name in route ? route[name] : this.config[name];\n};\n\nexport default FetchMock;\n", "const statusTextMap = {\n\t100: 'Continue',\n\t101: 'Switching Protocols',\n\t102: 'Processing',\n\t200: 'OK',\n\t201: 'Created',\n\t202: 'Accepted',\n\t203: 'Non-Authoritative Information',\n\t204: 'No Content',\n\t205: 'Reset Content',\n\t206: 'Partial Content',\n\t207: 'Multi-Status',\n\t208: 'Already Reported',\n\t226: 'IM Used',\n\t300: 'Multiple Choices',\n\t301: 'Moved Permanently',\n\t302: 'Found',\n\t303: 'See Other',\n\t304: 'Not Modified',\n\t305: 'Use Proxy',\n\t307: 'Temporary Redirect',\n\t308: 'Permanent Redirect',\n\t400: 'Bad Request',\n\t401: 'Unauthorized',\n\t402: 'Payment Required',\n\t403: 'Forbidden',\n\t404: 'Not Found',\n\t405: 'Method Not Allowed',\n\t406: 'Not Acceptable',\n\t407: 'Proxy Authentication Required',\n\t408: 'Request Timeout',\n\t409: 'Conflict',\n\t410: 'Gone',\n\t411: 'Length Required',\n\t412: 'Precondition Failed',\n\t413: 'Payload Too Large',\n\t414: 'URI Too Long',\n\t415: 'Unsupported Media Type',\n\t416: 'Range Not Satisfiable',\n\t417: 'Expectation Failed',\n\t418: \"I'm a teapot\",\n\t421: 'Misdirected Request',\n\t422: 'Unprocessable Entity',\n\t423: 'Locked',\n\t424: 'Failed Dependency',\n\t425: 'Unordered Collection',\n\t426: 'Upgrade Required',\n\t428: 'Precondition Required',\n\t429: 'Too Many Requests',\n\t431: 'Request Header Fields Too Large',\n\t451: 'Unavailable For Legal Reasons',\n\t500: 'Internal Server Error',\n\t501: 'Not Implemented',\n\t502: 'Bad Gateway',\n\t503: 'Service Unavailable',\n\t504: 'Gateway Timeout',\n\t505: 'HTTP Version Not Supported',\n\t506: 'Variant Also Negotiates',\n\t507: 'Insufficient Storage',\n\t508: 'Loop Detected',\n\t509: 'Bandwidth Limit Exceeded',\n\t510: 'Not Extended',\n\t511: 'Network Authentication Required',\n};\n\nexport default statusTextMap;\n", "import FetchMock from './lib/index.js';\nimport statusTextMap from './lib/status-text.js';\n\nFetchMock.statusTextMap = statusTextMap;\n\nFetchMock.config = Object.assign(FetchMock.config, {\n\tRequest: globalThis.Request,\n\tResponse: globalThis.Response,\n\tHeaders: globalThis.Headers,\n\tfetch: globalThis.fetch,\n});\n\nexport default FetchMock.createInstance();\n"],
  "mappings": "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",
  "names": ["FetchMock", "index", "headers", "u", "requestUtils.normalizeRequest", "route", "glob", "isSubset", "regexparam.parse", "headerUtils", "isEqual", "matcherUrl", "options", "fetchHandler", "setUpAndTearDown", "inspecting"]
}
